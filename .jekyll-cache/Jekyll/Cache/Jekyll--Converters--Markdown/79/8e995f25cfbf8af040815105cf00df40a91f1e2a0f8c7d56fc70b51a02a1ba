I"h<h2 id="map-a-database-table-to-a-java-class">Map a Database Table to a Java Class</h2>
<p>Let’s start with a simple example, where we map one database table to one JPA entity: below we have a STUDENT table with 4 columns:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">student_id</span> <span class="nb">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span>
<span class="n">student_name</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">45</span><span class="p">)</span>
<span class="n">student_fulltime</span> <span class="nb">TINYINT</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">student_age</span> <span class="nb">INT</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span>
</code></pre></div></div>
<p><br /></p>

<p>Below we have a Java Student class with 4 attributes that represents the above database table.</p>
<ul>
  <li>The class must be annotated with <code class="highlighter-rouge">@Entity</code>.</li>
  <li>Entities must have a unique identfier annotated with <code class="highlighter-rouge">@Id</code>. JPA will generate the id when persisted, for this reason we don’t include student_id in the constructor.</li>
  <li><code class="highlighter-rouge">@Column</code> maps the class atributes to table columns.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Entity</span>
<span class="nd">@Table</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"STUDENT"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span><span class="o">{</span>
	<span class="nd">@Id</span>
	<span class="nd">@GeneratedValue</span><span class="o">(</span><span class="n">strategy</span><span class="o">=</span><span class="nc">GenerationType</span><span class="o">.</span><span class="na">IDENTITY</span><span class="o">)</span>
	<span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"student_id"</span><span class="o">)</span>
	<span class="kd">private</span> <span class="nc">Integer</span> <span class="n">student</span> <span class="nc">Id</span><span class="o">;</span>

	<span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"student_name"</span><span class="o">)</span>
	<span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span>

	<span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"student_fulltime"</span><span class="o">)</span>
	<span class="kd">private</span> <span class="kt">boolean</span> <span class="n">fullTime</span><span class="o">;</span>

	<span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"student_age"</span><span class="o">)</span>
	<span class="kd">private</span> <span class="nc">Integer</span> <span class="n">age</span><span class="o">;</span>

	<span class="kd">public</span> <span class="nf">Student</span> <span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">fullTime</span><span class="o">,</span> <span class="nc">Integer</span> <span class="n">age</span><span class="o">){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">fullTime</span> <span class="o">=</span> <span class="n">fullTime</span><span class="o">;</span>
		<span class="k">this</span><span class="o">.</span><span class="na">age</span> <span class="o">=</span> <span class="n">age</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c1">//getters and setters logic here</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br /></p>

<p>Now that we have define dthe object to relational mapping metadata, all of our database related coding can stay in the logical world because JPA will take care of the physical world for us.</p>

:ET